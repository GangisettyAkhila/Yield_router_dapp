{
  "version": 3,
  "sources": [
    "../../yield_router/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcQ;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAZR;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;;;;;;;;;AAmBK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAUU;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACA;;AAAA;AAEW;;AAAA;AAAA;AAAA;AAA4C;AAA5C;;AAAA;AACuB;;AAAA;AAAlC;;AAAA;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AACsC;AAAA;AAAA;;AAAA;AAAgD;AAAhD;;AAAA;AAA6D;AAA7D;AAAtC;;AAAA;AAAA;AAlBH;AAAA;AAoBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEG;;AAAA;AACO;;AAAA;AAAA;AAAA;AAA4C;AAA5C;;AAAA;AACA;;AAAA;;AAAA;AAAP;AACkC;;AAAA;AAAlC;;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AANH;AAAA;AAQA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGG;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAHH;AAAA;AAKA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO;AAAA;AAAA;AAAA;AAA4C;AAA5C;;AAAA;AACA;;AAAA;AAAA;AAAA;AAAgD;AAAhD;;AAAA;AACA;;AAAA;AAAA;AAAA;AAA4C;AAA5C;;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAgD;AAAhD;;AAAA;AANP;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB;AAAA;AAAA;AAAgD;AAAhD;;AAAA;AAAA;AACrB;;;AACmB;AAJd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKe;AAAA;AACH;;AAAA;AAAA;AAAA;AAAA;AAA4C;AAA5C;;AAAA;AACE;AAAA;AAAA;AAAA;AAA4C;AAA5C;;AAAA;AACL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAAzC;AAAA;;AAAA;AACI;AAAA;AAA8B;;;;;;;AAA/B;AATZ;;;;AAYA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEmB;AAAA;AAAA;AAA4C;AAA5C;;AAAA;AACA;AACA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;AACN;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAyC;AAAzC;AAAA;;AAAA;AAAA;AAIH;;AAAA;AAAf;;;;;AAGsB;;AAAA;AAAA;;AAAA;AAAgD;AAAhD;;AAAA;AACiB;;AAAV;AAAT;;AAAA;AAAA;AAAA;;AAEL;;AAAA;AAAf;;;;;;;;;;;AAXA;AAAA;;;;;;;;AANK;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY4B;;AAAT;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 32 8"
    },
    "7": {
      "op": "bytecblock \"staked_amt\" \"\" \"stake_time\" \"platform\" \"stake_count\" \"apy_\" 0x151f7c75 \"platform_list\""
    },
    "77": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "79": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "82": {
      "op": "bytec 7 // \"platform_list\"",
      "defined_out": [
        "\"platform_list\""
      ],
      "stack_out": [
        "\"platform_list\""
      ]
    },
    "84": {
      "op": "pushbytes 0x0008000f001800210005416c676f35000754696e796d616e00074d657373696e61000c466f6c6b7346696e616e6365",
      "defined_out": [
        "\"platform_list\"",
        "0x0008000f001800210005416c676f35000754696e796d616e00074d657373696e61000c466f6c6b7346696e616e6365"
      ],
      "stack_out": [
        "\"platform_list\"",
        "0x0008000f001800210005416c676f35000754696e796d616e00074d657373696e61000c466f6c6b7346696e616e6365"
      ]
    },
    "133": {
      "op": "app_global_put",
      "stack_out": []
    },
    "134": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "136": {
      "op": "bz main___algopy_default_create@15",
      "stack_out": []
    },
    "139": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "141": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "142": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "143": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "145": {
      "op": "assert",
      "stack_out": []
    },
    "146": {
      "op": "pushbytess 0x0642ff90 0x5eb259de 0x9be35335 0xf9eba28b 0xbc76d9bb 0x5cd41c93 // method \"stake(pay,address,address,uint64,uint64,string)void\", method \"unstake(address,uint64,uint64)void\", method \"update_platform_apy(string,uint64)void\", method \"get_user_tracking(address)(uint64,uint64,string,uint64)\", method \"calculate_rewards(address,uint64)uint64\", method \"get_recommended_platform(address)string\"",
      "defined_out": [
        "Method(calculate_rewards(address,uint64)uint64)",
        "Method(get_recommended_platform(address)string)",
        "Method(get_user_tracking(address)(uint64,uint64,string,uint64))",
        "Method(stake(pay,address,address,uint64,uint64,string)void)",
        "Method(unstake(address,uint64,uint64)void)",
        "Method(update_platform_apy(string,uint64)void)"
      ],
      "stack_out": [
        "Method(stake(pay,address,address,uint64,uint64,string)void)",
        "Method(unstake(address,uint64,uint64)void)",
        "Method(update_platform_apy(string,uint64)void)",
        "Method(get_user_tracking(address)(uint64,uint64,string,uint64))",
        "Method(calculate_rewards(address,uint64)uint64)",
        "Method(get_recommended_platform(address)string)"
      ]
    },
    "178": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calculate_rewards(address,uint64)uint64)",
        "Method(get_recommended_platform(address)string)",
        "Method(get_user_tracking(address)(uint64,uint64,string,uint64))",
        "Method(stake(pay,address,address,uint64,uint64,string)void)",
        "Method(unstake(address,uint64,uint64)void)",
        "Method(update_platform_apy(string,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "Method(stake(pay,address,address,uint64,uint64,string)void)",
        "Method(unstake(address,uint64,uint64)void)",
        "Method(update_platform_apy(string,uint64)void)",
        "Method(get_user_tracking(address)(uint64,uint64,string,uint64))",
        "Method(calculate_rewards(address,uint64)uint64)",
        "Method(get_recommended_platform(address)string)",
        "tmp%6#0"
      ]
    },
    "181": {
      "op": "match stake unstake update_platform_apy get_user_tracking calculate_rewards get_recommended_platform",
      "stack_out": []
    },
    "195": {
      "op": "err"
    },
    "196": {
      "block": "main___algopy_default_create@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "198": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "199": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "201": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "202": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "203": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [],
      "stack_out": []
    },
    "204": {
      "subroutine": "smart_contracts.yield_router.contract.YieldRouterContract.stake[routing]",
      "params": {},
      "block": "stake",
      "stack_in": [],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "206": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "207": {
      "op": "-",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0"
      ]
    },
    "208": {
      "op": "dup",
      "defined_out": [
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "209": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "211": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "212": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "213": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0"
      ]
    },
    "214": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "contract_address#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0"
      ]
    },
    "217": {
      "op": "dup",
      "defined_out": [
        "contract_address#0",
        "contract_address#0 (copy)",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "contract_address#0 (copy)"
      ]
    },
    "218": {
      "op": "len",
      "defined_out": [
        "contract_address#0",
        "len%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "len%0#0"
      ]
    },
    "219": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "contract_address#0",
        "len%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "len%0#0",
        "32"
      ]
    },
    "220": {
      "op": "==",
      "defined_out": [
        "contract_address#0",
        "eq%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "eq%0#0"
      ]
    },
    "221": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "payment#0",
        "contract_address#0"
      ]
    },
    "222": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "contract_address#0",
        "for_account#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0"
      ]
    },
    "225": {
      "op": "dup",
      "defined_out": [
        "contract_address#0",
        "for_account#0",
        "for_account#0 (copy)",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "226": {
      "op": "len",
      "defined_out": [
        "contract_address#0",
        "for_account#0",
        "len%1#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "len%1#0"
      ]
    },
    "227": {
      "op": "intc_2 // 32",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "len%1#0",
        "32"
      ]
    },
    "228": {
      "op": "==",
      "defined_out": [
        "contract_address#0",
        "eq%1#0",
        "for_account#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "eq%1#0"
      ]
    },
    "229": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0"
      ]
    },
    "230": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "tmp%5#0"
      ]
    },
    "233": {
      "op": "dup",
      "defined_out": [
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "234": {
      "op": "len",
      "defined_out": [
        "contract_address#0",
        "for_account#0",
        "len%2#0",
        "payment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "tmp%5#0",
        "len%2#0"
      ]
    },
    "235": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "contract_address#0",
        "for_account#0",
        "len%2#0",
        "payment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "tmp%5#0",
        "len%2#0",
        "8"
      ]
    },
    "236": {
      "op": "==",
      "defined_out": [
        "contract_address#0",
        "eq%2#0",
        "for_account#0",
        "payment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "tmp%5#0",
        "eq%2#0"
      ]
    },
    "237": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "tmp%5#0"
      ]
    },
    "238": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0"
      ]
    },
    "239": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "tmp%7#0"
      ]
    },
    "242": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "243": {
      "op": "len",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "len%3#0",
        "payment#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "tmp%7#0",
        "len%3#0"
      ]
    },
    "244": {
      "op": "intc_3 // 8",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "tmp%7#0",
        "len%3#0",
        "8"
      ]
    },
    "245": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "eq%3#0",
        "for_account#0",
        "payment#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "tmp%7#0",
        "eq%3#0"
      ]
    },
    "246": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "tmp%7#0"
      ]
    },
    "247": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "timestamp#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0"
      ]
    },
    "248": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0"
      ]
    },
    "251": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "252": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "tmp%9#0 (copy)",
        "0"
      ]
    },
    "253": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "aggregate%array_length%0#0"
      ]
    },
    "254": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "256": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "add%0#0"
      ]
    },
    "257": {
      "op": "dig 1",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "add%0#0",
        "tmp%9#0 (copy)"
      ]
    },
    "259": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "len%4#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "add%0#0",
        "len%4#0"
      ]
    },
    "260": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "eq%4#0",
        "for_account#0",
        "payment#0",
        "timestamp#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0",
        "eq%4#0"
      ]
    },
    "261": {
      "error": "invalid number of bytes for (len+utf8[])",
      "op": "assert // invalid number of bytes for (len+utf8[])",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "tmp%9#0"
      ]
    },
    "262": {
      "op": "extract 2 0",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "platform#0",
        "timestamp#0"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0"
      ]
    },
    "265": {
      "op": "dig 5",
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "payment#0 (copy)"
      ]
    },
    "267": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount#0",
        "contract_address#0",
        "for_account#0",
        "payment#0",
        "platform#0",
        "timestamp#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "contract_address#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "tmp%0#1"
      ]
    },
    "269": {
      "op": "uncover 5",
      "stack_out": [
        "payment#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "tmp%0#1",
        "contract_address#0"
      ]
    },
    "271": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "payment#0",
        "platform#0",
        "timestamp#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "payment#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "tmp%1#1"
      ]
    },
    "272": {
      "error": "Payment must go to contract",
      "op": "assert // Payment must go to contract",
      "stack_out": [
        "payment#0",
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0"
      ]
    },
    "273": {
      "op": "uncover 4",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "payment#0"
      ]
    },
    "275": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "platform#0",
        "timestamp#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "tmp%2#1"
      ]
    },
    "277": {
      "op": "dig 3",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)",
        "for_account#0",
        "platform#0",
        "timestamp#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "tmp%2#1",
        "amount#0 (copy)"
      ]
    },
    "279": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "platform#0",
        "timestamp#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "tmp%3#1"
      ]
    },
    "280": {
      "error": "Payment amount must match stake amount",
      "op": "assert // Payment amount must match stake amount",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0"
      ]
    },
    "281": {
      "op": "dig 2",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "amount#0 (copy)"
      ]
    },
    "283": {
      "error": "Staking amount must be greater than zero",
      "op": "assert // Staking amount must be greater than zero",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0"
      ]
    },
    "284": {
      "op": "dig 3",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "for_account#0 (copy)"
      ]
    },
    "286": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "for_account#0 (copy)",
        "0"
      ]
    },
    "287": {
      "op": "bytec_0 // \"staked_amt\"",
      "defined_out": [
        "\"staked_amt\"",
        "0",
        "amount#0",
        "for_account#0",
        "for_account#0 (copy)",
        "platform#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "for_account#0 (copy)",
        "0",
        "\"staked_amt\""
      ]
    },
    "288": {
      "op": "app_local_get_ex",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "platform#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "289": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "290": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "292": {
      "op": "select",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "platform#0",
        "previous#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "platform#0",
        "previous#0"
      ]
    },
    "293": {
      "op": "uncover 3",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0",
        "previous#0",
        "amount#0"
      ]
    },
    "295": {
      "op": "+",
      "defined_out": [
        "for_account#0",
        "platform#0",
        "timestamp#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0",
        "tmp%5#1"
      ]
    },
    "296": {
      "op": "dig 3",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0",
        "tmp%5#1",
        "for_account#0 (copy)"
      ]
    },
    "298": {
      "op": "bytec_0 // \"staked_amt\"",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0",
        "tmp%5#1",
        "for_account#0 (copy)",
        "\"staked_amt\""
      ]
    },
    "299": {
      "op": "uncover 2",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0",
        "for_account#0 (copy)",
        "\"staked_amt\"",
        "tmp%5#1"
      ]
    },
    "301": {
      "op": "app_local_put",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0"
      ]
    },
    "302": {
      "op": "dig 2",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0",
        "for_account#0 (copy)"
      ]
    },
    "304": {
      "op": "bytec_2 // \"stake_time\"",
      "defined_out": [
        "\"stake_time\"",
        "for_account#0",
        "for_account#0 (copy)",
        "platform#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "platform#0",
        "for_account#0 (copy)",
        "\"stake_time\""
      ]
    },
    "305": {
      "op": "uncover 3",
      "stack_out": [
        "for_account#0",
        "platform#0",
        "for_account#0 (copy)",
        "\"stake_time\"",
        "timestamp#0"
      ]
    },
    "307": {
      "op": "app_local_put",
      "stack_out": [
        "for_account#0",
        "platform#0"
      ]
    },
    "308": {
      "op": "dig 1",
      "stack_out": [
        "for_account#0",
        "platform#0",
        "for_account#0 (copy)"
      ]
    },
    "310": {
      "op": "bytec_3 // \"platform\"",
      "defined_out": [
        "\"platform\"",
        "for_account#0",
        "for_account#0 (copy)",
        "platform#0"
      ],
      "stack_out": [
        "for_account#0",
        "platform#0",
        "for_account#0 (copy)",
        "\"platform\""
      ]
    },
    "311": {
      "op": "uncover 2",
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)",
        "\"platform\"",
        "platform#0"
      ]
    },
    "313": {
      "op": "app_local_put",
      "stack_out": [
        "for_account#0"
      ]
    },
    "314": {
      "op": "dup",
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "315": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)",
        "0"
      ]
    },
    "316": {
      "op": "bytec 4 // \"stake_count\"",
      "defined_out": [
        "\"stake_count\"",
        "0",
        "for_account#0",
        "for_account#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)",
        "0",
        "\"stake_count\""
      ]
    },
    "318": {
      "op": "app_local_get_ex",
      "defined_out": [
        "for_account#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "for_account#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "319": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "0"
      ]
    },
    "320": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "322": {
      "op": "select",
      "defined_out": [
        "for_account#0",
        "state_get%1#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%1#0"
      ]
    },
    "323": {
      "op": "intc_1 // 1",
      "stack_out": [
        "for_account#0",
        "state_get%1#0",
        "1"
      ]
    },
    "324": {
      "op": "+",
      "defined_out": [
        "for_account#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "for_account#0",
        "tmp%6#1"
      ]
    },
    "325": {
      "op": "bytec 4 // \"stake_count\""
    },
    "327": {
      "op": "swap",
      "stack_out": [
        "for_account#0",
        "\"stake_count\"",
        "tmp%6#1"
      ]
    },
    "328": {
      "op": "app_local_put",
      "stack_out": []
    },
    "329": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "330": {
      "op": "return",
      "stack_out": []
    },
    "331": {
      "subroutine": "smart_contracts.yield_router.contract.YieldRouterContract.unstake[routing]",
      "params": {},
      "block": "unstake",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0"
      ]
    },
    "334": {
      "op": "dup",
      "defined_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "335": {
      "op": "len",
      "defined_out": [
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "len%0#0"
      ]
    },
    "336": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "len%0#0",
        "32"
      ]
    },
    "337": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0",
        "eq%0#0"
      ]
    },
    "338": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "for_account#0"
      ]
    },
    "339": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "for_account#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "tmp%2#0"
      ]
    },
    "342": {
      "op": "dup",
      "defined_out": [
        "for_account#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "343": {
      "op": "len",
      "defined_out": [
        "for_account#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "tmp%2#0",
        "len%1#0"
      ]
    },
    "344": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "for_account#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "tmp%2#0",
        "len%1#0",
        "8"
      ]
    },
    "345": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "for_account#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "tmp%2#0",
        "eq%1#0"
      ]
    },
    "346": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "for_account#0",
        "tmp%2#0"
      ]
    },
    "347": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0"
      ]
    },
    "348": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "tmp%4#0"
      ]
    },
    "351": {
      "op": "dup",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "352": {
      "op": "len",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "len%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "tmp%4#0",
        "len%2#0"
      ]
    },
    "353": {
      "op": "intc_3 // 8",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "tmp%4#0",
        "len%2#0",
        "8"
      ]
    },
    "354": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "eq%2#0",
        "for_account#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "tmp%4#0",
        "eq%2#0"
      ]
    },
    "355": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "tmp%4#0"
      ]
    },
    "356": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0"
      ]
    },
    "357": {
      "op": "dig 1",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)",
        "for_account#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "amount#0 (copy)"
      ]
    },
    "359": {
      "error": "Unstaking amount must be greater than zero",
      "op": "assert // Unstaking amount must be greater than zero",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0"
      ]
    },
    "360": {
      "op": "dig 2",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "for_account#0 (copy)"
      ]
    },
    "362": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amount#0",
        "for_account#0",
        "for_account#0 (copy)",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "for_account#0 (copy)",
        "0"
      ]
    },
    "363": {
      "op": "bytec_0 // \"staked_amt\"",
      "defined_out": [
        "\"staked_amt\"",
        "0",
        "amount#0",
        "for_account#0",
        "for_account#0 (copy)",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "for_account#0 (copy)",
        "0",
        "\"staked_amt\""
      ]
    },
    "364": {
      "op": "app_local_get_ex",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "366": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "368": {
      "op": "select",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "prev#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "prev#0"
      ]
    },
    "369": {
      "op": "dig 2",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "prev#0",
        "amount#0 (copy)"
      ]
    },
    "371": {
      "op": "dig 1",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)",
        "for_account#0",
        "prev#0",
        "prev#0 (copy)",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "prev#0",
        "amount#0 (copy)",
        "prev#0 (copy)"
      ]
    },
    "373": {
      "op": "<=",
      "defined_out": [
        "amount#0",
        "for_account#0",
        "prev#0",
        "timestamp#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "prev#0",
        "tmp%1#1"
      ]
    },
    "374": {
      "error": "Cannot unstake more than currently staked",
      "op": "assert // Cannot unstake more than currently staked",
      "stack_out": [
        "for_account#0",
        "amount#0",
        "timestamp#0",
        "prev#0"
      ]
    },
    "375": {
      "op": "uncover 2",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "prev#0",
        "amount#0"
      ]
    },
    "377": {
      "op": "-",
      "defined_out": [
        "for_account#0",
        "timestamp#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "tmp%2#1"
      ]
    },
    "378": {
      "op": "dig 2",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "tmp%2#1",
        "for_account#0 (copy)"
      ]
    },
    "380": {
      "op": "bytec_0 // \"staked_amt\"",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "tmp%2#1",
        "for_account#0 (copy)",
        "\"staked_amt\""
      ]
    },
    "381": {
      "op": "uncover 2",
      "stack_out": [
        "for_account#0",
        "timestamp#0",
        "for_account#0 (copy)",
        "\"staked_amt\"",
        "tmp%2#1"
      ]
    },
    "383": {
      "op": "app_local_put",
      "stack_out": [
        "for_account#0",
        "timestamp#0"
      ]
    },
    "384": {
      "op": "bytec_2 // \"stake_time\""
    },
    "385": {
      "op": "swap",
      "defined_out": [
        "\"stake_time\"",
        "for_account#0",
        "timestamp#0"
      ],
      "stack_out": [
        "for_account#0",
        "\"stake_time\"",
        "timestamp#0"
      ]
    },
    "386": {
      "op": "app_local_put",
      "stack_out": []
    },
    "387": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "388": {
      "op": "return",
      "stack_out": []
    },
    "389": {
      "subroutine": "smart_contracts.yield_router.contract.YieldRouterContract.update_platform_apy[routing]",
      "params": {},
      "block": "update_platform_apy",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "392": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "393": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0"
      ]
    },
    "394": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "395": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "397": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "add%0#0"
      ]
    },
    "398": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "add%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "400": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "401": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "402": {
      "error": "invalid number of bytes for (len+utf8[])",
      "op": "assert // invalid number of bytes for (len+utf8[])",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "403": {
      "op": "extract 2 0",
      "defined_out": [
        "platform#0"
      ],
      "stack_out": [
        "platform#0"
      ]
    },
    "406": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "platform#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "platform#0",
        "tmp%2#0"
      ]
    },
    "409": {
      "op": "dup",
      "defined_out": [
        "platform#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "platform#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "410": {
      "op": "len",
      "defined_out": [
        "len%1#0",
        "platform#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "platform#0",
        "tmp%2#0",
        "len%1#0"
      ]
    },
    "411": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "len%1#0",
        "platform#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "platform#0",
        "tmp%2#0",
        "len%1#0",
        "8"
      ]
    },
    "412": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "platform#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "platform#0",
        "tmp%2#0",
        "eq%1#0"
      ]
    },
    "413": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "platform#0",
        "tmp%2#0"
      ]
    },
    "414": {
      "op": "btoi",
      "defined_out": [
        "apy#0",
        "platform#0"
      ],
      "stack_out": [
        "platform#0",
        "apy#0"
      ]
    },
    "415": {
      "op": "bytec 5 // \"apy_\"",
      "defined_out": [
        "\"apy_\"",
        "apy#0",
        "platform#0"
      ],
      "stack_out": [
        "platform#0",
        "apy#0",
        "\"apy_\""
      ]
    },
    "417": {
      "op": "uncover 2",
      "stack_out": [
        "apy#0",
        "\"apy_\"",
        "platform#0"
      ]
    },
    "419": {
      "op": "concat",
      "defined_out": [
        "apy#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "apy#0",
        "box_prefixed_key%0#0"
      ]
    },
    "420": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "apy#0"
      ]
    },
    "421": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0"
      ]
    },
    "422": {
      "op": "box_put",
      "stack_out": []
    },
    "423": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "424": {
      "op": "return",
      "stack_out": []
    },
    "425": {
      "subroutine": "smart_contracts.yield_router.contract.YieldRouterContract.get_user_tracking[routing]",
      "params": {},
      "block": "get_user_tracking",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0"
      ]
    },
    "428": {
      "op": "dup",
      "defined_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "429": {
      "op": "len",
      "defined_out": [
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "len%0#0"
      ]
    },
    "430": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "len%0#0",
        "32"
      ]
    },
    "431": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0",
        "eq%0#0"
      ]
    },
    "432": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "for_account#0"
      ]
    },
    "433": {
      "op": "dup",
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "434": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "for_account#0",
        "for_account#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)",
        "0"
      ]
    },
    "435": {
      "op": "bytec_0 // \"staked_amt\"",
      "defined_out": [
        "\"staked_amt\"",
        "0",
        "for_account#0",
        "for_account#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0 (copy)",
        "0",
        "\"staked_amt\""
      ]
    },
    "436": {
      "op": "app_local_get_ex",
      "defined_out": [
        "for_account#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "437": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "438": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "440": {
      "op": "select",
      "defined_out": [
        "for_account#0",
        "state_get%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0"
      ]
    },
    "441": {
      "op": "dig 1",
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "for_account#0 (copy)"
      ]
    },
    "443": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "for_account#0 (copy)",
        "0"
      ]
    },
    "444": {
      "op": "bytec_2 // \"stake_time\"",
      "defined_out": [
        "\"stake_time\"",
        "0",
        "for_account#0",
        "for_account#0 (copy)",
        "state_get%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "for_account#0 (copy)",
        "0",
        "\"stake_time\""
      ]
    },
    "445": {
      "op": "app_local_get_ex",
      "defined_out": [
        "for_account#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "state_get%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "446": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "0"
      ]
    },
    "447": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "449": {
      "op": "select",
      "defined_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0"
      ]
    },
    "450": {
      "op": "dig 2",
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "for_account#0 (copy)"
      ]
    },
    "452": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "for_account#0 (copy)",
        "0"
      ]
    },
    "453": {
      "op": "bytec_3 // \"platform\"",
      "defined_out": [
        "\"platform\"",
        "0",
        "for_account#0",
        "for_account#0 (copy)",
        "state_get%0#0",
        "state_get%1#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "for_account#0 (copy)",
        "0",
        "\"platform\""
      ]
    },
    "454": {
      "op": "app_local_get_ex",
      "defined_out": [
        "for_account#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "state_get%0#0",
        "state_get%1#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "455": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "\"\"",
        "for_account#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "state_get%0#0",
        "state_get%1#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0",
        "\"\""
      ]
    },
    "456": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "\"\"",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "458": {
      "op": "select",
      "defined_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0"
      ]
    },
    "459": {
      "op": "uncover 3",
      "stack_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "for_account#0"
      ]
    },
    "461": {
      "op": "intc_0 // 0",
      "stack_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "for_account#0",
        "0"
      ]
    },
    "462": {
      "op": "bytec 4 // \"stake_count\"",
      "defined_out": [
        "\"stake_count\"",
        "0",
        "for_account#0",
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "for_account#0",
        "0",
        "\"stake_count\""
      ]
    },
    "464": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "465": {
      "op": "intc_0 // 0",
      "stack_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0",
        "0"
      ]
    },
    "466": {
      "op": "cover 2",
      "stack_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "468": {
      "op": "select",
      "defined_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "state_get%3#0"
      ]
    },
    "469": {
      "op": "uncover 3",
      "stack_out": [
        "state_get%1#0",
        "state_get%2#0",
        "state_get%3#0",
        "state_get%0#0"
      ]
    },
    "471": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "state_get%1#0",
        "state_get%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%1#0",
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "472": {
      "op": "uncover 3",
      "stack_out": [
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%val_as_bytes%0#0",
        "state_get%1#0"
      ]
    },
    "474": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "state_get%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "475": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "state_get%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%head%1#0"
      ]
    },
    "476": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%head%1#0",
        "state_get%2#0",
        "state_get%2#0 (copy)",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%head%1#0",
        "state_get%2#0 (copy)"
      ]
    },
    "478": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "state_get%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "479": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "state_get%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "480": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "state_get%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "state_get%3#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "483": {
      "op": "uncover 3",
      "stack_out": [
        "state_get%3#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "state_get%2#0"
      ]
    },
    "485": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%3#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "486": {
      "op": "swap",
      "stack_out": [
        "state_get%3#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "487": {
      "op": "pushbytes 0x001a",
      "defined_out": [
        "0x001a",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%3#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "0x001a"
      ]
    },
    "491": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "state_get%3#0"
      ],
      "stack_out": [
        "state_get%3#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0"
      ]
    },
    "492": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "state_get%3#0"
      ]
    },
    "494": {
      "op": "itob",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "495": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%3#0"
      ]
    },
    "496": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%3#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "497": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0"
      ],
      "stack_out": [
        "aggregate%concat%0#0"
      ]
    },
    "498": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%concat%0#0"
      ],
      "stack_out": [
        "aggregate%concat%0#0",
        "0x151f7c75"
      ]
    },
    "500": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%concat%0#0"
      ]
    },
    "501": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "502": {
      "op": "log",
      "stack_out": []
    },
    "503": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "504": {
      "op": "return",
      "stack_out": []
    },
    "505": {
      "subroutine": "smart_contracts.yield_router.contract.YieldRouterContract.calculate_rewards[routing]",
      "params": {},
      "block": "calculate_rewards",
      "stack_in": [],
      "op": "txna ApplicationArgs 1"
    },
    "508": {
      "op": "dupn 2",
      "defined_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "510": {
      "op": "len",
      "defined_out": [
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "len%0#0"
      ]
    },
    "511": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "len%0#0",
        "32"
      ]
    },
    "512": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "eq%0#0"
      ]
    },
    "513": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "for_account#0",
        "for_account#0"
      ]
    },
    "514": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "for_account#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "tmp%2#0"
      ]
    },
    "517": {
      "op": "dup",
      "defined_out": [
        "for_account#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "518": {
      "op": "len",
      "defined_out": [
        "for_account#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "tmp%2#0",
        "len%1#0"
      ]
    },
    "519": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "for_account#0",
        "len%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "tmp%2#0",
        "len%1#0",
        "8"
      ]
    },
    "520": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "for_account#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "tmp%2#0",
        "eq%1#0"
      ]
    },
    "521": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "tmp%2#0"
      ]
    },
    "522": {
      "op": "btoi",
      "defined_out": [
        "current_time#0",
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0",
        "for_account#0",
        "current_time#0"
      ]
    },
    "523": {
      "op": "swap",
      "defined_out": [
        "current_time#0",
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "for_account#0"
      ]
    },
    "524": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "for_account#0",
        "0"
      ]
    },
    "525": {
      "op": "bytec_2 // \"stake_time\"",
      "defined_out": [
        "\"stake_time\"",
        "0",
        "current_time#0",
        "for_account#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "for_account#0",
        "0",
        "\"stake_time\""
      ]
    },
    "526": {
      "op": "app_local_get_ex",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "528": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "530": {
      "op": "select",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0"
      ]
    },
    "531": {
      "op": "dup",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "stake_time#0"
      ]
    },
    "532": {
      "op": "bnz calculate_rewards_after_if_else@3",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0"
      ]
    },
    "535": {
      "op": "intc_0 // 0",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "tmp%4#0"
      ]
    },
    "536": {
      "block": "calculate_rewards_after_inlined_smart_contracts.yield_router.contract.YieldRouterContract.calculate_rewards@4",
      "stack_in": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "tmp%4#0"
      ],
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "537": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "539": {
      "op": "swap",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "540": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "tmp%6#0"
      ]
    },
    "541": {
      "op": "log",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0"
      ]
    },
    "542": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "1"
      ]
    },
    "543": {
      "op": "return",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0"
      ]
    },
    "544": {
      "block": "calculate_rewards_after_if_else@3",
      "stack_in": [
        "for_account#0",
        "current_time#0",
        "stake_time#0"
      ],
      "op": "dup2",
      "defined_out": [
        "current_time#0",
        "stake_time#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "current_time#0",
        "stake_time#0"
      ]
    },
    "545": {
      "op": "-",
      "defined_out": [
        "current_time#0",
        "stake_time#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0"
      ]
    },
    "546": {
      "op": "dig 3",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0"
      ]
    },
    "548": {
      "op": "dup",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "for_account#0 (copy)",
        "stake_time#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "549": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "current_time#0",
        "for_account#0",
        "for_account#0 (copy)",
        "stake_time#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0",
        "for_account#0 (copy)",
        "0"
      ]
    },
    "550": {
      "op": "bytec_0 // \"staked_amt\"",
      "defined_out": [
        "\"staked_amt\"",
        "0",
        "current_time#0",
        "for_account#0",
        "for_account#0 (copy)",
        "stake_time#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0",
        "for_account#0 (copy)",
        "0",
        "\"staked_amt\""
      ]
    },
    "551": {
      "op": "app_local_get_ex",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "stake_time#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "552": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "0"
      ]
    },
    "553": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0",
        "0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "555": {
      "op": "select",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "for_account#0",
        "staked#0"
      ]
    },
    "556": {
      "op": "swap",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "for_account#0"
      ]
    },
    "557": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "for_account#0",
        "0"
      ]
    },
    "558": {
      "op": "bytec_3 // \"platform\"",
      "defined_out": [
        "\"platform\"",
        "0",
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "for_account#0",
        "0",
        "\"platform\""
      ]
    },
    "559": {
      "op": "app_local_get_ex",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "560": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "\"\"",
        "current_time#0",
        "for_account#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "maybe_value%2#0",
        "maybe_exists%2#0",
        "\"\""
      ]
    },
    "561": {
      "op": "cover 2",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "\"\"",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "563": {
      "op": "select",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "platform#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "platform#0"
      ]
    },
    "564": {
      "op": "bytec 5 // \"apy_\"",
      "defined_out": [
        "\"apy_\"",
        "current_time#0",
        "for_account#0",
        "platform#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "platform#0",
        "\"apy_\""
      ]
    },
    "566": {
      "op": "swap",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "\"apy_\"",
        "platform#0"
      ]
    },
    "567": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "box_prefixed_key%0#0"
      ]
    },
    "568": {
      "op": "box_get",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "569": {
      "op": "swap",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "570": {
      "op": "btoi",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "maybe_exists%3#0",
        "maybe_value_converted%0#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "maybe_exists%3#0",
        "maybe_value_converted%0#0"
      ]
    },
    "571": {
      "op": "intc_0 // 0",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "maybe_exists%3#0",
        "maybe_value_converted%0#0",
        "0"
      ]
    },
    "572": {
      "op": "swap",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "maybe_exists%3#0",
        "0",
        "maybe_value_converted%0#0"
      ]
    },
    "573": {
      "op": "uncover 2",
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "0",
        "maybe_value_converted%0#0",
        "maybe_exists%3#0"
      ]
    },
    "575": {
      "op": "select",
      "defined_out": [
        "apy#0",
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "staked#0",
        "time_diff#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "staked#0",
        "apy#0"
      ]
    },
    "576": {
      "op": "*",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "time_diff#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "time_diff#0",
        "tmp%2#1"
      ]
    },
    "577": {
      "op": "*",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "tmp%3#1"
      ]
    },
    "578": {
      "op": "pushint 315360000000 // 315360000000",
      "defined_out": [
        "315360000000",
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "tmp%3#1",
        "315360000000"
      ]
    },
    "585": {
      "op": "/",
      "defined_out": [
        "current_time#0",
        "for_account#0",
        "stake_time#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "for_account#0",
        "current_time#0",
        "stake_time#0",
        "tmp%4#0"
      ]
    },
    "586": {
      "op": "b calculate_rewards_after_inlined_smart_contracts.yield_router.contract.YieldRouterContract.calculate_rewards@4"
    },
    "589": {
      "subroutine": "smart_contracts.yield_router.contract.YieldRouterContract.get_recommended_platform[routing]",
      "params": {},
      "block": "get_recommended_platform",
      "stack_in": [],
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "score#1"
      ]
    },
    "590": {
      "op": "txna ApplicationArgs 1"
    },
    "593": {
      "op": "dupn 2",
      "defined_out": [
        "for_account#0",
        "for_account#0 (copy)"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "for_account#0",
        "for_account#0 (copy)"
      ]
    },
    "595": {
      "op": "len",
      "defined_out": [
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "for_account#0",
        "len%0#0"
      ]
    },
    "596": {
      "op": "intc_2 // 32",
      "defined_out": [
        "32",
        "for_account#0",
        "len%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "for_account#0",
        "len%0#0",
        "32"
      ]
    },
    "597": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "for_account#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "for_account#0",
        "eq%0#0"
      ]
    },
    "598": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "score#1",
        "for_account#0",
        "for_account#0"
      ]
    },
    "599": {
      "op": "intc_0 // 0",
      "stack_out": [
        "score#1",
        "for_account#0",
        "for_account#0",
        "0"
      ]
    },
    "600": {
      "op": "bytec_3 // \"platform\"",
      "defined_out": [
        "\"platform\"",
        "0",
        "for_account#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "for_account#0",
        "0",
        "\"platform\""
      ]
    },
    "601": {
      "op": "app_local_get_ex",
      "defined_out": [
        "for_account#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "602": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "\"\"",
        "for_account#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "\"\""
      ]
    },
    "603": {
      "op": "cover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "\"\"",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "605": {
      "op": "select",
      "defined_out": [
        "for_account#0",
        "last_platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0"
      ]
    },
    "606": {
      "op": "bytec_1 // \"\""
    },
    "607": {
      "op": "intc_0 // 0"
    },
    "608": {
      "op": "dup"
    },
    "609": {
      "op": "bytec 7 // \"platform_list\"",
      "defined_out": [
        "\"platform_list\"",
        "0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "0",
        "\"platform_list\""
      ]
    },
    "611": {
      "op": "app_global_get_ex",
      "defined_out": [
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "612": {
      "error": "check self.platform_list exists",
      "op": "assert // check self.platform_list exists",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0"
      ]
    },
    "613": {
      "op": "dup",
      "defined_out": [
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "614": {
      "op": "intc_0 // 0",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "0"
      ]
    },
    "615": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "616": {
      "op": "dig 1",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%0#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "618": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%0#0",
        "maybe_value%1#0 (copy)",
        "2"
      ]
    },
    "620": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "621": {
      "op": "dig 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "623": {
      "op": "uncover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%1#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "625": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%1#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "627": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "628": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "platform#0"
      ]
    },
    "631": {
      "op": "cover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "633": {
      "op": "dig 1",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "635": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%extract_uint16%1#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%1#0 (copy)",
        "4"
      ]
    },
    "637": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%3#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "638": {
      "op": "dig 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%3#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "640": {
      "op": "uncover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "maybe_value%1#0 (copy)",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "642": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%3#0 (copy)",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "maybe_value%1#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%3#0 (copy)"
      ]
    },
    "644": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0"
      ]
    },
    "645": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0",
        "platform#3"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "platform#3"
      ]
    },
    "648": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0",
        "platform#3"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "650": {
      "op": "dig 1",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "652": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%extract_uint16%3#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "platform#0",
        "platform#3"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "maybe_value%1#0 (copy)",
        "6"
      ]
    },
    "654": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%5#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0",
        "platform#3"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "655": {
      "op": "dig 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%5#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "657": {
      "op": "uncover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%5#0",
        "maybe_value%1#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "659": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%extract_uint16%5#0 (copy)",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "platform#0",
        "platform#3"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%5#0",
        "maybe_value%1#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%5#0 (copy)"
      ]
    },
    "661": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%2#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0",
        "platform#3"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%2#0"
      ]
    },
    "662": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0",
        "platform#3",
        "platform#4"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "maybe_value%1#0",
        "aggregate%extract_uint16%5#0",
        "platform#4"
      ]
    },
    "665": {
      "op": "cover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "maybe_value%1#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "667": {
      "op": "dig 1",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "maybe_value%1#0",
        "aggregate%extract_uint16%5#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "669": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%len%0#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "maybe_value%1#0",
        "platform#0",
        "platform#3",
        "platform#4"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "maybe_value%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%0#0"
      ]
    },
    "670": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#0",
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "platform#0",
        "platform#3",
        "platform#4"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "aggregate%substring3%3#0"
      ]
    },
    "671": {
      "op": "extract 2 0",
      "defined_out": [
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5"
      ]
    },
    "674": {
      "op": "intc_0 // 0",
      "defined_out": [
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "last_platform#0",
        "loop_counter%0#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "675": {
      "block": "get_recommended_platform_for_body@2",
      "stack_in": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ],
      "op": "bytec 5 // \"apy_\"",
      "defined_out": [
        "\"apy_\""
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "\"apy_\""
      ]
    },
    "677": {
      "op": "dig 5",
      "defined_out": [
        "\"apy_\"",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "\"apy_\"",
        "platform#0"
      ]
    },
    "679": {
      "op": "dup",
      "defined_out": [
        "\"apy_\"",
        "platform#0",
        "platform#0 (copy)"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "\"apy_\"",
        "platform#0 (copy)",
        "platform#0 (copy)"
      ]
    },
    "680": {
      "op": "cover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "\"apy_\"",
        "platform#0 (copy)"
      ]
    },
    "682": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "box_prefixed_key%0#0"
      ]
    },
    "683": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "684": {
      "op": "swap",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ]
    },
    "685": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value_converted%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "maybe_exists%2#0",
        "maybe_value_converted%0#0"
      ]
    },
    "686": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_exists%2#0",
        "maybe_value_converted%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "maybe_exists%2#0",
        "maybe_value_converted%0#0",
        "0"
      ]
    },
    "687": {
      "op": "swap",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "maybe_exists%2#0",
        "0",
        "maybe_value_converted%0#0"
      ]
    },
    "688": {
      "op": "uncover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "0",
        "maybe_value_converted%0#0",
        "maybe_exists%2#0"
      ]
    },
    "690": {
      "op": "select",
      "defined_out": [
        "apy#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0",
        "apy#0"
      ]
    },
    "691": {
      "op": "swap",
      "defined_out": [
        "apy#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "apy#0",
        "platform#0"
      ]
    },
    "692": {
      "op": "dig 9",
      "defined_out": [
        "apy#0",
        "last_platform#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "apy#0",
        "platform#0",
        "last_platform#0"
      ]
    },
    "694": {
      "op": "==",
      "defined_out": [
        "apy#0",
        "last_platform#0",
        "platform#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "apy#0",
        "tmp%4#1"
      ]
    },
    "695": {
      "op": "bnz get_recommended_platform_if_body@3",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "apy#0"
      ]
    },
    "698": {
      "op": "bury 10",
      "defined_out": [
        "last_platform#0",
        "platform#0",
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "700": {
      "block": "get_recommended_platform_after_if_else@4",
      "stack_in": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ],
      "op": "dig 8",
      "defined_out": [
        "for_account#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "for_account#0"
      ]
    },
    "702": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "for_account#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "for_account#0",
        "0"
      ]
    },
    "703": {
      "op": "bytec 4 // \"stake_count\"",
      "defined_out": [
        "\"stake_count\"",
        "0",
        "for_account#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "for_account#0",
        "0",
        "\"stake_count\""
      ]
    },
    "705": {
      "op": "app_local_get_ex",
      "defined_out": [
        "for_account#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "706": {
      "op": "intc_0 // 0",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0",
        "0"
      ]
    },
    "707": {
      "op": "cover 2",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "709": {
      "op": "select",
      "defined_out": [
        "for_account#0",
        "loyalty#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "loyalty#0"
      ]
    },
    "710": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "for_account#0",
        "loyalty#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "loyalty#0",
        "10"
      ]
    },
    "712": {
      "op": "*",
      "defined_out": [
        "for_account#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "tmp%6#0"
      ]
    },
    "713": {
      "op": "dig 10",
      "defined_out": [
        "for_account#0",
        "score#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "tmp%6#0",
        "score#1"
      ]
    },
    "715": {
      "op": "+",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "score#1"
      ]
    },
    "716": {
      "op": "dup",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "score#1",
        "score#1"
      ]
    },
    "717": {
      "op": "bury 11",
      "defined_out": [
        "for_account#0",
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "score#1"
      ]
    },
    "719": {
      "op": "dig 6",
      "defined_out": [
        "for_account#0",
        "highest_score#0",
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "score#1",
        "highest_score#0"
      ]
    },
    "721": {
      "op": ">",
      "defined_out": [
        "for_account#0",
        "highest_score#0",
        "score#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "tmp%8#0"
      ]
    },
    "722": {
      "op": "bz get_recommended_platform_after_if_else@6",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "725": {
      "op": "dig 4",
      "defined_out": [
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "best_platform#0"
      ]
    },
    "727": {
      "op": "bury 7",
      "defined_out": [
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "729": {
      "op": "dig 9",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "highest_score#0"
      ]
    },
    "731": {
      "op": "bury 6",
      "defined_out": [
        "best_platform#0",
        "for_account#0",
        "highest_score#0",
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "733": {
      "block": "get_recommended_platform_after_if_else@6",
      "stack_in": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "734": {
      "op": "switch get_recommended_platform_for_header_1@8 get_recommended_platform_for_header_2@9 get_recommended_platform_for_header_3@10",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "742": {
      "op": "dig 6",
      "defined_out": [
        "best_platform#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "best_platform#0"
      ]
    },
    "744": {
      "op": "dup",
      "defined_out": [
        "best_platform#0",
        "best_platform#0 (copy)",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "best_platform#0",
        "best_platform#0 (copy)"
      ]
    },
    "745": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "best_platform#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "best_platform#0",
        "aggregate%length%0#0"
      ]
    },
    "746": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "best_platform#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "best_platform#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "747": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "best_platform#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "best_platform#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "750": {
      "op": "swap",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "aggregate%length_uint16%0#0",
        "best_platform#0"
      ]
    },
    "751": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "best_platform#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "752": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%encoded_value%0#0",
        "best_platform#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "aggregate%encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "754": {
      "op": "swap",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ]
    },
    "755": {
      "op": "concat",
      "defined_out": [
        "best_platform#0",
        "loop_counter%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "tmp%4#0"
      ]
    },
    "756": {
      "op": "log",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "757": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "best_platform#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "1"
      ]
    },
    "758": {
      "op": "return",
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "759": {
      "block": "get_recommended_platform_for_header_3@10",
      "stack_in": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ],
      "op": "pushint 3 // 3",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "761": {
      "op": "bury 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "763": {
      "op": "dig 1",
      "defined_out": [
        "loop_counter%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0"
      ]
    },
    "765": {
      "op": "bury 5",
      "defined_out": [
        "loop_counter%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "767": {
      "op": "b get_recommended_platform_for_body@2"
    },
    "770": {
      "block": "get_recommended_platform_for_header_2@9",
      "stack_in": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ],
      "op": "pushint 2 // 2",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "772": {
      "op": "bury 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "774": {
      "op": "dig 2",
      "defined_out": [
        "loop_counter%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0"
      ]
    },
    "776": {
      "op": "bury 5",
      "defined_out": [
        "loop_counter%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "778": {
      "op": "b get_recommended_platform_for_body@2"
    },
    "781": {
      "block": "get_recommended_platform_for_header_1@8",
      "stack_in": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "loop_counter%0#0"
      ]
    },
    "782": {
      "op": "bury 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "784": {
      "op": "dig 3",
      "defined_out": [
        "loop_counter%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "platform#0"
      ]
    },
    "786": {
      "op": "bury 5",
      "defined_out": [
        "loop_counter%0#0",
        "platform#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "788": {
      "op": "b get_recommended_platform_for_body@2"
    },
    "791": {
      "block": "get_recommended_platform_if_body@3",
      "stack_in": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "apy#0"
      ],
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "apy#0"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "apy#0",
        "2"
      ]
    },
    "793": {
      "op": "/",
      "defined_out": [
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0",
        "score#1"
      ]
    },
    "794": {
      "op": "bury 10",
      "defined_out": [
        "score#1"
      ],
      "stack_out": [
        "score#1",
        "for_account#0",
        "last_platform#0",
        "best_platform#0",
        "highest_score#0",
        "platform#0",
        "platform#3",
        "platform#4",
        "platform#5",
        "loop_counter%0#0"
      ]
    },
    "796": {
      "op": "b get_recommended_platform_after_if_else@4"
    }
  }
}